package Spellbook::Exploit::DataBreach {
    use strict;
    use warnings;
    use JSON;
    use Spellbook::Core::UserAgent;
    use Spellbook::Core::Credentials;

    our $VERSION = '0.0.1';

    sub new {
        my ($self, $parameters) = @_;
        my ($help, $target, @results);

        Getopt::Long::GetOptionsFromArray (
            $parameters,
            "h|help"     => \$help,
            "t|target=s" => \$target
        );

        if ($target) {
            my $credentials = Spellbook::Core::Credentials -> new(["--platform" => "hibp"]);
            my $endpoint    = "https://haveibeenpwned.com/api/v3/breachedaccount/$target?includeUnverified=true&truncateResponse=false";
            my $useragent   = Spellbook::Core::UserAgent -> new();
            my $request     = $useragent -> get($endpoint, "hibp-api-key" => $credentials);
            
            if ($request -> code() == 200) {
                my $data = decode_json($request -> decoded_content());

                foreach my $breach (@{$data}) {
                    my $title = $breach -> {Title};
                    my $date  = $breach -> {BreachDate};

                    push @results, "$target -> $title, $date\n";
                }
            }

            return @results;
        }

        if ($help) {
            return "
                \rExploit::Databreach
                \r==============
                \r-h, --help     See this menu
                \r-t, --target   Define a target\n\n";
        }
    }
}

1;