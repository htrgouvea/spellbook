package Spellbook::Exploit::Redis_Unauth {
    use strict;
    use warnings;
    use Redis;
    use Try::Tiny;

    our $VERSION = '0.0.1';

    sub new {
        my ($self, $parameters) = @_;
        my ($help, $target, @result);

        Getopt::Long::GetOptionsFromArray (
            $parameters,
            'h|help'     => \$help,
            't|target=s' => \$target
        );

        if ($target) {
            if ($target =~ m/^http(s)?:\/\//x) {
                $target =~ s/^http(s)?:\/\///x;
            }

            try {
                my $redis = Redis -> new (
                    server => $target, 
                    name => "Spellbook",
                    cnx_timeout => 45
                );
                
                my $requirepass = $redis -> config_get ("requirepass") -> [1];
            
                if (!defined($requirepass) || $requirepass eq "") {
                    push @result, $target;
                }
            };

            return @result;
        } 

        if ($help) {
            return "
                \rExploit::Redis_Exposed
                \r=====================
                \r-h, --help     See this menu
                \r-t, --target   Set a target to detect misconfigurations\n\n";
        }

        return 0;
    }
}

1;